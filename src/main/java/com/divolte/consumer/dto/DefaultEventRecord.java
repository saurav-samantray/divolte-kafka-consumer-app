/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.divolte.consumer.dto;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class DefaultEventRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3976081863825877362L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DefaultEventRecord\",\"namespace\":\"com.divolte.consumer.dto\",\"fields\":[{\"name\":\"detectedDuplicate\",\"type\":\"boolean\"},{\"name\":\"detectedCorruption\",\"type\":\"boolean\"},{\"name\":\"firstInSession\",\"type\":\"boolean\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"clientTimestamp\",\"type\":\"long\"},{\"name\":\"remoteHost\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"referer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"viewportPixelWidth\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"viewportPixelHeight\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"screenPixelWidth\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"screenPixelHeight\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"partyId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sessionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pageViewId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"unknown\"},{\"name\":\"userAgentString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentFamily\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentVendor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentDeviceCategory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentOsFamily\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentOsVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgentOsVendor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DefaultEventRecord> ENCODER =
      new BinaryMessageEncoder<DefaultEventRecord>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DefaultEventRecord> DECODER =
      new BinaryMessageDecoder<DefaultEventRecord>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DefaultEventRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DefaultEventRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DefaultEventRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DefaultEventRecord>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DefaultEventRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DefaultEventRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DefaultEventRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DefaultEventRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private boolean detectedDuplicate;
   private boolean detectedCorruption;
   private boolean firstInSession;
   private long timestamp;
   private long clientTimestamp;
   private java.lang.String remoteHost;
   private java.lang.String referer;
   private java.lang.String location;
   private java.lang.Integer viewportPixelWidth;
   private java.lang.Integer viewportPixelHeight;
   private java.lang.Integer screenPixelWidth;
   private java.lang.Integer screenPixelHeight;
   private java.lang.String partyId;
   private java.lang.String sessionId;
   private java.lang.String pageViewId;
   private java.lang.String eventType;
   private java.lang.String userAgentString;
   private java.lang.String userAgentName;
   private java.lang.String userAgentFamily;
   private java.lang.String userAgentVendor;
   private java.lang.String userAgentType;
   private java.lang.String userAgentVersion;
   private java.lang.String userAgentDeviceCategory;
   private java.lang.String userAgentOsFamily;
   private java.lang.String userAgentOsVersion;
   private java.lang.String userAgentOsVendor;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DefaultEventRecord() {}

  /**
   * All-args constructor.
   * @param detectedDuplicate The new value for detectedDuplicate
   * @param detectedCorruption The new value for detectedCorruption
   * @param firstInSession The new value for firstInSession
   * @param timestamp The new value for timestamp
   * @param clientTimestamp The new value for clientTimestamp
   * @param remoteHost The new value for remoteHost
   * @param referer The new value for referer
   * @param location The new value for location
   * @param viewportPixelWidth The new value for viewportPixelWidth
   * @param viewportPixelHeight The new value for viewportPixelHeight
   * @param screenPixelWidth The new value for screenPixelWidth
   * @param screenPixelHeight The new value for screenPixelHeight
   * @param partyId The new value for partyId
   * @param sessionId The new value for sessionId
   * @param pageViewId The new value for pageViewId
   * @param eventType The new value for eventType
   * @param userAgentString The new value for userAgentString
   * @param userAgentName The new value for userAgentName
   * @param userAgentFamily The new value for userAgentFamily
   * @param userAgentVendor The new value for userAgentVendor
   * @param userAgentType The new value for userAgentType
   * @param userAgentVersion The new value for userAgentVersion
   * @param userAgentDeviceCategory The new value for userAgentDeviceCategory
   * @param userAgentOsFamily The new value for userAgentOsFamily
   * @param userAgentOsVersion The new value for userAgentOsVersion
   * @param userAgentOsVendor The new value for userAgentOsVendor
   */
  public DefaultEventRecord(java.lang.Boolean detectedDuplicate, java.lang.Boolean detectedCorruption, java.lang.Boolean firstInSession, java.lang.Long timestamp, java.lang.Long clientTimestamp, java.lang.String remoteHost, java.lang.String referer, java.lang.String location, java.lang.Integer viewportPixelWidth, java.lang.Integer viewportPixelHeight, java.lang.Integer screenPixelWidth, java.lang.Integer screenPixelHeight, java.lang.String partyId, java.lang.String sessionId, java.lang.String pageViewId, java.lang.String eventType, java.lang.String userAgentString, java.lang.String userAgentName, java.lang.String userAgentFamily, java.lang.String userAgentVendor, java.lang.String userAgentType, java.lang.String userAgentVersion, java.lang.String userAgentDeviceCategory, java.lang.String userAgentOsFamily, java.lang.String userAgentOsVersion, java.lang.String userAgentOsVendor) {
    this.detectedDuplicate = detectedDuplicate;
    this.detectedCorruption = detectedCorruption;
    this.firstInSession = firstInSession;
    this.timestamp = timestamp;
    this.clientTimestamp = clientTimestamp;
    this.remoteHost = remoteHost;
    this.referer = referer;
    this.location = location;
    this.viewportPixelWidth = viewportPixelWidth;
    this.viewportPixelHeight = viewportPixelHeight;
    this.screenPixelWidth = screenPixelWidth;
    this.screenPixelHeight = screenPixelHeight;
    this.partyId = partyId;
    this.sessionId = sessionId;
    this.pageViewId = pageViewId;
    this.eventType = eventType;
    this.userAgentString = userAgentString;
    this.userAgentName = userAgentName;
    this.userAgentFamily = userAgentFamily;
    this.userAgentVendor = userAgentVendor;
    this.userAgentType = userAgentType;
    this.userAgentVersion = userAgentVersion;
    this.userAgentDeviceCategory = userAgentDeviceCategory;
    this.userAgentOsFamily = userAgentOsFamily;
    this.userAgentOsVersion = userAgentOsVersion;
    this.userAgentOsVendor = userAgentOsVendor;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return detectedDuplicate;
    case 1: return detectedCorruption;
    case 2: return firstInSession;
    case 3: return timestamp;
    case 4: return clientTimestamp;
    case 5: return remoteHost;
    case 6: return referer;
    case 7: return location;
    case 8: return viewportPixelWidth;
    case 9: return viewportPixelHeight;
    case 10: return screenPixelWidth;
    case 11: return screenPixelHeight;
    case 12: return partyId;
    case 13: return sessionId;
    case 14: return pageViewId;
    case 15: return eventType;
    case 16: return userAgentString;
    case 17: return userAgentName;
    case 18: return userAgentFamily;
    case 19: return userAgentVendor;
    case 20: return userAgentType;
    case 21: return userAgentVersion;
    case 22: return userAgentDeviceCategory;
    case 23: return userAgentOsFamily;
    case 24: return userAgentOsVersion;
    case 25: return userAgentOsVendor;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: detectedDuplicate = (java.lang.Boolean)value$; break;
    case 1: detectedCorruption = (java.lang.Boolean)value$; break;
    case 2: firstInSession = (java.lang.Boolean)value$; break;
    case 3: timestamp = (java.lang.Long)value$; break;
    case 4: clientTimestamp = (java.lang.Long)value$; break;
    case 5: remoteHost = value$ != null ? value$.toString() : null; break;
    case 6: referer = value$ != null ? value$.toString() : null; break;
    case 7: location = value$ != null ? value$.toString() : null; break;
    case 8: viewportPixelWidth = (java.lang.Integer)value$; break;
    case 9: viewportPixelHeight = (java.lang.Integer)value$; break;
    case 10: screenPixelWidth = (java.lang.Integer)value$; break;
    case 11: screenPixelHeight = (java.lang.Integer)value$; break;
    case 12: partyId = value$ != null ? value$.toString() : null; break;
    case 13: sessionId = value$ != null ? value$.toString() : null; break;
    case 14: pageViewId = value$ != null ? value$.toString() : null; break;
    case 15: eventType = value$ != null ? value$.toString() : null; break;
    case 16: userAgentString = value$ != null ? value$.toString() : null; break;
    case 17: userAgentName = value$ != null ? value$.toString() : null; break;
    case 18: userAgentFamily = value$ != null ? value$.toString() : null; break;
    case 19: userAgentVendor = value$ != null ? value$.toString() : null; break;
    case 20: userAgentType = value$ != null ? value$.toString() : null; break;
    case 21: userAgentVersion = value$ != null ? value$.toString() : null; break;
    case 22: userAgentDeviceCategory = value$ != null ? value$.toString() : null; break;
    case 23: userAgentOsFamily = value$ != null ? value$.toString() : null; break;
    case 24: userAgentOsVersion = value$ != null ? value$.toString() : null; break;
    case 25: userAgentOsVendor = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'detectedDuplicate' field.
   * @return The value of the 'detectedDuplicate' field.
   */
  public boolean getDetectedDuplicate() {
    return detectedDuplicate;
  }


  /**
   * Sets the value of the 'detectedDuplicate' field.
   * @param value the value to set.
   */
  public void setDetectedDuplicate(boolean value) {
    this.detectedDuplicate = value;
  }

  /**
   * Gets the value of the 'detectedCorruption' field.
   * @return The value of the 'detectedCorruption' field.
   */
  public boolean getDetectedCorruption() {
    return detectedCorruption;
  }


  /**
   * Sets the value of the 'detectedCorruption' field.
   * @param value the value to set.
   */
  public void setDetectedCorruption(boolean value) {
    this.detectedCorruption = value;
  }

  /**
   * Gets the value of the 'firstInSession' field.
   * @return The value of the 'firstInSession' field.
   */
  public boolean getFirstInSession() {
    return firstInSession;
  }


  /**
   * Sets the value of the 'firstInSession' field.
   * @param value the value to set.
   */
  public void setFirstInSession(boolean value) {
    this.firstInSession = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'clientTimestamp' field.
   * @return The value of the 'clientTimestamp' field.
   */
  public long getClientTimestamp() {
    return clientTimestamp;
  }


  /**
   * Sets the value of the 'clientTimestamp' field.
   * @param value the value to set.
   */
  public void setClientTimestamp(long value) {
    this.clientTimestamp = value;
  }

  /**
   * Gets the value of the 'remoteHost' field.
   * @return The value of the 'remoteHost' field.
   */
  public java.lang.String getRemoteHost() {
    return remoteHost;
  }


  /**
   * Sets the value of the 'remoteHost' field.
   * @param value the value to set.
   */
  public void setRemoteHost(java.lang.String value) {
    this.remoteHost = value;
  }

  /**
   * Gets the value of the 'referer' field.
   * @return The value of the 'referer' field.
   */
  public java.lang.String getReferer() {
    return referer;
  }


  /**
   * Sets the value of the 'referer' field.
   * @param value the value to set.
   */
  public void setReferer(java.lang.String value) {
    this.referer = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public java.lang.String getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(java.lang.String value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'viewportPixelWidth' field.
   * @return The value of the 'viewportPixelWidth' field.
   */
  public java.lang.Integer getViewportPixelWidth() {
    return viewportPixelWidth;
  }


  /**
   * Sets the value of the 'viewportPixelWidth' field.
   * @param value the value to set.
   */
  public void setViewportPixelWidth(java.lang.Integer value) {
    this.viewportPixelWidth = value;
  }

  /**
   * Gets the value of the 'viewportPixelHeight' field.
   * @return The value of the 'viewportPixelHeight' field.
   */
  public java.lang.Integer getViewportPixelHeight() {
    return viewportPixelHeight;
  }


  /**
   * Sets the value of the 'viewportPixelHeight' field.
   * @param value the value to set.
   */
  public void setViewportPixelHeight(java.lang.Integer value) {
    this.viewportPixelHeight = value;
  }

  /**
   * Gets the value of the 'screenPixelWidth' field.
   * @return The value of the 'screenPixelWidth' field.
   */
  public java.lang.Integer getScreenPixelWidth() {
    return screenPixelWidth;
  }


  /**
   * Sets the value of the 'screenPixelWidth' field.
   * @param value the value to set.
   */
  public void setScreenPixelWidth(java.lang.Integer value) {
    this.screenPixelWidth = value;
  }

  /**
   * Gets the value of the 'screenPixelHeight' field.
   * @return The value of the 'screenPixelHeight' field.
   */
  public java.lang.Integer getScreenPixelHeight() {
    return screenPixelHeight;
  }


  /**
   * Sets the value of the 'screenPixelHeight' field.
   * @param value the value to set.
   */
  public void setScreenPixelHeight(java.lang.Integer value) {
    this.screenPixelHeight = value;
  }

  /**
   * Gets the value of the 'partyId' field.
   * @return The value of the 'partyId' field.
   */
  public java.lang.String getPartyId() {
    return partyId;
  }


  /**
   * Sets the value of the 'partyId' field.
   * @param value the value to set.
   */
  public void setPartyId(java.lang.String value) {
    this.partyId = value;
  }

  /**
   * Gets the value of the 'sessionId' field.
   * @return The value of the 'sessionId' field.
   */
  public java.lang.String getSessionId() {
    return sessionId;
  }


  /**
   * Sets the value of the 'sessionId' field.
   * @param value the value to set.
   */
  public void setSessionId(java.lang.String value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'pageViewId' field.
   * @return The value of the 'pageViewId' field.
   */
  public java.lang.String getPageViewId() {
    return pageViewId;
  }


  /**
   * Sets the value of the 'pageViewId' field.
   * @param value the value to set.
   */
  public void setPageViewId(java.lang.String value) {
    this.pageViewId = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.String getEventType() {
    return eventType;
  }


  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.String value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'userAgentString' field.
   * @return The value of the 'userAgentString' field.
   */
  public java.lang.String getUserAgentString() {
    return userAgentString;
  }


  /**
   * Sets the value of the 'userAgentString' field.
   * @param value the value to set.
   */
  public void setUserAgentString(java.lang.String value) {
    this.userAgentString = value;
  }

  /**
   * Gets the value of the 'userAgentName' field.
   * @return The value of the 'userAgentName' field.
   */
  public java.lang.String getUserAgentName() {
    return userAgentName;
  }


  /**
   * Sets the value of the 'userAgentName' field.
   * @param value the value to set.
   */
  public void setUserAgentName(java.lang.String value) {
    this.userAgentName = value;
  }

  /**
   * Gets the value of the 'userAgentFamily' field.
   * @return The value of the 'userAgentFamily' field.
   */
  public java.lang.String getUserAgentFamily() {
    return userAgentFamily;
  }


  /**
   * Sets the value of the 'userAgentFamily' field.
   * @param value the value to set.
   */
  public void setUserAgentFamily(java.lang.String value) {
    this.userAgentFamily = value;
  }

  /**
   * Gets the value of the 'userAgentVendor' field.
   * @return The value of the 'userAgentVendor' field.
   */
  public java.lang.String getUserAgentVendor() {
    return userAgentVendor;
  }


  /**
   * Sets the value of the 'userAgentVendor' field.
   * @param value the value to set.
   */
  public void setUserAgentVendor(java.lang.String value) {
    this.userAgentVendor = value;
  }

  /**
   * Gets the value of the 'userAgentType' field.
   * @return The value of the 'userAgentType' field.
   */
  public java.lang.String getUserAgentType() {
    return userAgentType;
  }


  /**
   * Sets the value of the 'userAgentType' field.
   * @param value the value to set.
   */
  public void setUserAgentType(java.lang.String value) {
    this.userAgentType = value;
  }

  /**
   * Gets the value of the 'userAgentVersion' field.
   * @return The value of the 'userAgentVersion' field.
   */
  public java.lang.String getUserAgentVersion() {
    return userAgentVersion;
  }


  /**
   * Sets the value of the 'userAgentVersion' field.
   * @param value the value to set.
   */
  public void setUserAgentVersion(java.lang.String value) {
    this.userAgentVersion = value;
  }

  /**
   * Gets the value of the 'userAgentDeviceCategory' field.
   * @return The value of the 'userAgentDeviceCategory' field.
   */
  public java.lang.String getUserAgentDeviceCategory() {
    return userAgentDeviceCategory;
  }


  /**
   * Sets the value of the 'userAgentDeviceCategory' field.
   * @param value the value to set.
   */
  public void setUserAgentDeviceCategory(java.lang.String value) {
    this.userAgentDeviceCategory = value;
  }

  /**
   * Gets the value of the 'userAgentOsFamily' field.
   * @return The value of the 'userAgentOsFamily' field.
   */
  public java.lang.String getUserAgentOsFamily() {
    return userAgentOsFamily;
  }


  /**
   * Sets the value of the 'userAgentOsFamily' field.
   * @param value the value to set.
   */
  public void setUserAgentOsFamily(java.lang.String value) {
    this.userAgentOsFamily = value;
  }

  /**
   * Gets the value of the 'userAgentOsVersion' field.
   * @return The value of the 'userAgentOsVersion' field.
   */
  public java.lang.String getUserAgentOsVersion() {
    return userAgentOsVersion;
  }


  /**
   * Sets the value of the 'userAgentOsVersion' field.
   * @param value the value to set.
   */
  public void setUserAgentOsVersion(java.lang.String value) {
    this.userAgentOsVersion = value;
  }

  /**
   * Gets the value of the 'userAgentOsVendor' field.
   * @return The value of the 'userAgentOsVendor' field.
   */
  public java.lang.String getUserAgentOsVendor() {
    return userAgentOsVendor;
  }


  /**
   * Sets the value of the 'userAgentOsVendor' field.
   * @param value the value to set.
   */
  public void setUserAgentOsVendor(java.lang.String value) {
    this.userAgentOsVendor = value;
  }

  /**
   * Creates a new DefaultEventRecord RecordBuilder.
   * @return A new DefaultEventRecord RecordBuilder
   */
  public static com.divolte.consumer.dto.DefaultEventRecord.Builder newBuilder() {
    return new com.divolte.consumer.dto.DefaultEventRecord.Builder();
  }

  /**
   * Creates a new DefaultEventRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DefaultEventRecord RecordBuilder
   */
  public static com.divolte.consumer.dto.DefaultEventRecord.Builder newBuilder(com.divolte.consumer.dto.DefaultEventRecord.Builder other) {
    if (other == null) {
      return new com.divolte.consumer.dto.DefaultEventRecord.Builder();
    } else {
      return new com.divolte.consumer.dto.DefaultEventRecord.Builder(other);
    }
  }

  /**
   * Creates a new DefaultEventRecord RecordBuilder by copying an existing DefaultEventRecord instance.
   * @param other The existing instance to copy.
   * @return A new DefaultEventRecord RecordBuilder
   */
  public static com.divolte.consumer.dto.DefaultEventRecord.Builder newBuilder(com.divolte.consumer.dto.DefaultEventRecord other) {
    if (other == null) {
      return new com.divolte.consumer.dto.DefaultEventRecord.Builder();
    } else {
      return new com.divolte.consumer.dto.DefaultEventRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for DefaultEventRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DefaultEventRecord>
    implements org.apache.avro.data.RecordBuilder<DefaultEventRecord> {

    private boolean detectedDuplicate;
    private boolean detectedCorruption;
    private boolean firstInSession;
    private long timestamp;
    private long clientTimestamp;
    private java.lang.String remoteHost;
    private java.lang.String referer;
    private java.lang.String location;
    private java.lang.Integer viewportPixelWidth;
    private java.lang.Integer viewportPixelHeight;
    private java.lang.Integer screenPixelWidth;
    private java.lang.Integer screenPixelHeight;
    private java.lang.String partyId;
    private java.lang.String sessionId;
    private java.lang.String pageViewId;
    private java.lang.String eventType;
    private java.lang.String userAgentString;
    private java.lang.String userAgentName;
    private java.lang.String userAgentFamily;
    private java.lang.String userAgentVendor;
    private java.lang.String userAgentType;
    private java.lang.String userAgentVersion;
    private java.lang.String userAgentDeviceCategory;
    private java.lang.String userAgentOsFamily;
    private java.lang.String userAgentOsVersion;
    private java.lang.String userAgentOsVendor;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.divolte.consumer.dto.DefaultEventRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.detectedDuplicate)) {
        this.detectedDuplicate = data().deepCopy(fields()[0].schema(), other.detectedDuplicate);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.detectedCorruption)) {
        this.detectedCorruption = data().deepCopy(fields()[1].schema(), other.detectedCorruption);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.firstInSession)) {
        this.firstInSession = data().deepCopy(fields()[2].schema(), other.firstInSession);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.clientTimestamp)) {
        this.clientTimestamp = data().deepCopy(fields()[4].schema(), other.clientTimestamp);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.remoteHost)) {
        this.remoteHost = data().deepCopy(fields()[5].schema(), other.remoteHost);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.referer)) {
        this.referer = data().deepCopy(fields()[6].schema(), other.referer);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.location)) {
        this.location = data().deepCopy(fields()[7].schema(), other.location);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.viewportPixelWidth)) {
        this.viewportPixelWidth = data().deepCopy(fields()[8].schema(), other.viewportPixelWidth);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.viewportPixelHeight)) {
        this.viewportPixelHeight = data().deepCopy(fields()[9].schema(), other.viewportPixelHeight);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.screenPixelWidth)) {
        this.screenPixelWidth = data().deepCopy(fields()[10].schema(), other.screenPixelWidth);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.screenPixelHeight)) {
        this.screenPixelHeight = data().deepCopy(fields()[11].schema(), other.screenPixelHeight);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.partyId)) {
        this.partyId = data().deepCopy(fields()[12].schema(), other.partyId);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[13].schema(), other.sessionId);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.pageViewId)) {
        this.pageViewId = data().deepCopy(fields()[14].schema(), other.pageViewId);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.eventType)) {
        this.eventType = data().deepCopy(fields()[15].schema(), other.eventType);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.userAgentString)) {
        this.userAgentString = data().deepCopy(fields()[16].schema(), other.userAgentString);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.userAgentName)) {
        this.userAgentName = data().deepCopy(fields()[17].schema(), other.userAgentName);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.userAgentFamily)) {
        this.userAgentFamily = data().deepCopy(fields()[18].schema(), other.userAgentFamily);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.userAgentVendor)) {
        this.userAgentVendor = data().deepCopy(fields()[19].schema(), other.userAgentVendor);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.userAgentType)) {
        this.userAgentType = data().deepCopy(fields()[20].schema(), other.userAgentType);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.userAgentVersion)) {
        this.userAgentVersion = data().deepCopy(fields()[21].schema(), other.userAgentVersion);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.userAgentDeviceCategory)) {
        this.userAgentDeviceCategory = data().deepCopy(fields()[22].schema(), other.userAgentDeviceCategory);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.userAgentOsFamily)) {
        this.userAgentOsFamily = data().deepCopy(fields()[23].schema(), other.userAgentOsFamily);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.userAgentOsVersion)) {
        this.userAgentOsVersion = data().deepCopy(fields()[24].schema(), other.userAgentOsVersion);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.userAgentOsVendor)) {
        this.userAgentOsVendor = data().deepCopy(fields()[25].schema(), other.userAgentOsVendor);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
    }

    /**
     * Creates a Builder by copying an existing DefaultEventRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.divolte.consumer.dto.DefaultEventRecord other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.detectedDuplicate)) {
        this.detectedDuplicate = data().deepCopy(fields()[0].schema(), other.detectedDuplicate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.detectedCorruption)) {
        this.detectedCorruption = data().deepCopy(fields()[1].schema(), other.detectedCorruption);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstInSession)) {
        this.firstInSession = data().deepCopy(fields()[2].schema(), other.firstInSession);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.clientTimestamp)) {
        this.clientTimestamp = data().deepCopy(fields()[4].schema(), other.clientTimestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.remoteHost)) {
        this.remoteHost = data().deepCopy(fields()[5].schema(), other.remoteHost);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.referer)) {
        this.referer = data().deepCopy(fields()[6].schema(), other.referer);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.location)) {
        this.location = data().deepCopy(fields()[7].schema(), other.location);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.viewportPixelWidth)) {
        this.viewportPixelWidth = data().deepCopy(fields()[8].schema(), other.viewportPixelWidth);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.viewportPixelHeight)) {
        this.viewportPixelHeight = data().deepCopy(fields()[9].schema(), other.viewportPixelHeight);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.screenPixelWidth)) {
        this.screenPixelWidth = data().deepCopy(fields()[10].schema(), other.screenPixelWidth);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.screenPixelHeight)) {
        this.screenPixelHeight = data().deepCopy(fields()[11].schema(), other.screenPixelHeight);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.partyId)) {
        this.partyId = data().deepCopy(fields()[12].schema(), other.partyId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[13].schema(), other.sessionId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.pageViewId)) {
        this.pageViewId = data().deepCopy(fields()[14].schema(), other.pageViewId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.eventType)) {
        this.eventType = data().deepCopy(fields()[15].schema(), other.eventType);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.userAgentString)) {
        this.userAgentString = data().deepCopy(fields()[16].schema(), other.userAgentString);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.userAgentName)) {
        this.userAgentName = data().deepCopy(fields()[17].schema(), other.userAgentName);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.userAgentFamily)) {
        this.userAgentFamily = data().deepCopy(fields()[18].schema(), other.userAgentFamily);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.userAgentVendor)) {
        this.userAgentVendor = data().deepCopy(fields()[19].schema(), other.userAgentVendor);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.userAgentType)) {
        this.userAgentType = data().deepCopy(fields()[20].schema(), other.userAgentType);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.userAgentVersion)) {
        this.userAgentVersion = data().deepCopy(fields()[21].schema(), other.userAgentVersion);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.userAgentDeviceCategory)) {
        this.userAgentDeviceCategory = data().deepCopy(fields()[22].schema(), other.userAgentDeviceCategory);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.userAgentOsFamily)) {
        this.userAgentOsFamily = data().deepCopy(fields()[23].schema(), other.userAgentOsFamily);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.userAgentOsVersion)) {
        this.userAgentOsVersion = data().deepCopy(fields()[24].schema(), other.userAgentOsVersion);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.userAgentOsVendor)) {
        this.userAgentOsVendor = data().deepCopy(fields()[25].schema(), other.userAgentOsVendor);
        fieldSetFlags()[25] = true;
      }
    }

    /**
      * Gets the value of the 'detectedDuplicate' field.
      * @return The value.
      */
    public boolean getDetectedDuplicate() {
      return detectedDuplicate;
    }


    /**
      * Sets the value of the 'detectedDuplicate' field.
      * @param value The value of 'detectedDuplicate'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setDetectedDuplicate(boolean value) {
      validate(fields()[0], value);
      this.detectedDuplicate = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'detectedDuplicate' field has been set.
      * @return True if the 'detectedDuplicate' field has been set, false otherwise.
      */
    public boolean hasDetectedDuplicate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'detectedDuplicate' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearDetectedDuplicate() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'detectedCorruption' field.
      * @return The value.
      */
    public boolean getDetectedCorruption() {
      return detectedCorruption;
    }


    /**
      * Sets the value of the 'detectedCorruption' field.
      * @param value The value of 'detectedCorruption'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setDetectedCorruption(boolean value) {
      validate(fields()[1], value);
      this.detectedCorruption = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'detectedCorruption' field has been set.
      * @return True if the 'detectedCorruption' field has been set, false otherwise.
      */
    public boolean hasDetectedCorruption() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'detectedCorruption' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearDetectedCorruption() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstInSession' field.
      * @return The value.
      */
    public boolean getFirstInSession() {
      return firstInSession;
    }


    /**
      * Sets the value of the 'firstInSession' field.
      * @param value The value of 'firstInSession'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setFirstInSession(boolean value) {
      validate(fields()[2], value);
      this.firstInSession = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'firstInSession' field has been set.
      * @return True if the 'firstInSession' field has been set, false otherwise.
      */
    public boolean hasFirstInSession() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'firstInSession' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearFirstInSession() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setTimestamp(long value) {
      validate(fields()[3], value);
      this.timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientTimestamp' field.
      * @return The value.
      */
    public long getClientTimestamp() {
      return clientTimestamp;
    }


    /**
      * Sets the value of the 'clientTimestamp' field.
      * @param value The value of 'clientTimestamp'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setClientTimestamp(long value) {
      validate(fields()[4], value);
      this.clientTimestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'clientTimestamp' field has been set.
      * @return True if the 'clientTimestamp' field has been set, false otherwise.
      */
    public boolean hasClientTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'clientTimestamp' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearClientTimestamp() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'remoteHost' field.
      * @return The value.
      */
    public java.lang.String getRemoteHost() {
      return remoteHost;
    }


    /**
      * Sets the value of the 'remoteHost' field.
      * @param value The value of 'remoteHost'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setRemoteHost(java.lang.String value) {
      validate(fields()[5], value);
      this.remoteHost = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'remoteHost' field has been set.
      * @return True if the 'remoteHost' field has been set, false otherwise.
      */
    public boolean hasRemoteHost() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'remoteHost' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearRemoteHost() {
      remoteHost = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'referer' field.
      * @return The value.
      */
    public java.lang.String getReferer() {
      return referer;
    }


    /**
      * Sets the value of the 'referer' field.
      * @param value The value of 'referer'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setReferer(java.lang.String value) {
      validate(fields()[6], value);
      this.referer = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'referer' field has been set.
      * @return True if the 'referer' field has been set, false otherwise.
      */
    public boolean hasReferer() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'referer' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearReferer() {
      referer = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public java.lang.String getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setLocation(java.lang.String value) {
      validate(fields()[7], value);
      this.location = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearLocation() {
      location = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'viewportPixelWidth' field.
      * @return The value.
      */
    public java.lang.Integer getViewportPixelWidth() {
      return viewportPixelWidth;
    }


    /**
      * Sets the value of the 'viewportPixelWidth' field.
      * @param value The value of 'viewportPixelWidth'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setViewportPixelWidth(java.lang.Integer value) {
      validate(fields()[8], value);
      this.viewportPixelWidth = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'viewportPixelWidth' field has been set.
      * @return True if the 'viewportPixelWidth' field has been set, false otherwise.
      */
    public boolean hasViewportPixelWidth() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'viewportPixelWidth' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearViewportPixelWidth() {
      viewportPixelWidth = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'viewportPixelHeight' field.
      * @return The value.
      */
    public java.lang.Integer getViewportPixelHeight() {
      return viewportPixelHeight;
    }


    /**
      * Sets the value of the 'viewportPixelHeight' field.
      * @param value The value of 'viewportPixelHeight'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setViewportPixelHeight(java.lang.Integer value) {
      validate(fields()[9], value);
      this.viewportPixelHeight = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'viewportPixelHeight' field has been set.
      * @return True if the 'viewportPixelHeight' field has been set, false otherwise.
      */
    public boolean hasViewportPixelHeight() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'viewportPixelHeight' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearViewportPixelHeight() {
      viewportPixelHeight = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'screenPixelWidth' field.
      * @return The value.
      */
    public java.lang.Integer getScreenPixelWidth() {
      return screenPixelWidth;
    }


    /**
      * Sets the value of the 'screenPixelWidth' field.
      * @param value The value of 'screenPixelWidth'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setScreenPixelWidth(java.lang.Integer value) {
      validate(fields()[10], value);
      this.screenPixelWidth = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'screenPixelWidth' field has been set.
      * @return True if the 'screenPixelWidth' field has been set, false otherwise.
      */
    public boolean hasScreenPixelWidth() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'screenPixelWidth' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearScreenPixelWidth() {
      screenPixelWidth = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'screenPixelHeight' field.
      * @return The value.
      */
    public java.lang.Integer getScreenPixelHeight() {
      return screenPixelHeight;
    }


    /**
      * Sets the value of the 'screenPixelHeight' field.
      * @param value The value of 'screenPixelHeight'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setScreenPixelHeight(java.lang.Integer value) {
      validate(fields()[11], value);
      this.screenPixelHeight = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'screenPixelHeight' field has been set.
      * @return True if the 'screenPixelHeight' field has been set, false otherwise.
      */
    public boolean hasScreenPixelHeight() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'screenPixelHeight' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearScreenPixelHeight() {
      screenPixelHeight = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'partyId' field.
      * @return The value.
      */
    public java.lang.String getPartyId() {
      return partyId;
    }


    /**
      * Sets the value of the 'partyId' field.
      * @param value The value of 'partyId'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setPartyId(java.lang.String value) {
      validate(fields()[12], value);
      this.partyId = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'partyId' field has been set.
      * @return True if the 'partyId' field has been set, false otherwise.
      */
    public boolean hasPartyId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'partyId' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearPartyId() {
      partyId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionId' field.
      * @return The value.
      */
    public java.lang.String getSessionId() {
      return sessionId;
    }


    /**
      * Sets the value of the 'sessionId' field.
      * @param value The value of 'sessionId'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setSessionId(java.lang.String value) {
      validate(fields()[13], value);
      this.sessionId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionId' field has been set.
      * @return True if the 'sessionId' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'sessionId' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearSessionId() {
      sessionId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageViewId' field.
      * @return The value.
      */
    public java.lang.String getPageViewId() {
      return pageViewId;
    }


    /**
      * Sets the value of the 'pageViewId' field.
      * @param value The value of 'pageViewId'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setPageViewId(java.lang.String value) {
      validate(fields()[14], value);
      this.pageViewId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'pageViewId' field has been set.
      * @return True if the 'pageViewId' field has been set, false otherwise.
      */
    public boolean hasPageViewId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'pageViewId' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearPageViewId() {
      pageViewId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.String getEventType() {
      return eventType;
    }


    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setEventType(java.lang.String value) {
      validate(fields()[15], value);
      this.eventType = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentString' field.
      * @return The value.
      */
    public java.lang.String getUserAgentString() {
      return userAgentString;
    }


    /**
      * Sets the value of the 'userAgentString' field.
      * @param value The value of 'userAgentString'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentString(java.lang.String value) {
      validate(fields()[16], value);
      this.userAgentString = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentString' field has been set.
      * @return True if the 'userAgentString' field has been set, false otherwise.
      */
    public boolean hasUserAgentString() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'userAgentString' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentString() {
      userAgentString = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentName' field.
      * @return The value.
      */
    public java.lang.String getUserAgentName() {
      return userAgentName;
    }


    /**
      * Sets the value of the 'userAgentName' field.
      * @param value The value of 'userAgentName'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentName(java.lang.String value) {
      validate(fields()[17], value);
      this.userAgentName = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentName' field has been set.
      * @return True if the 'userAgentName' field has been set, false otherwise.
      */
    public boolean hasUserAgentName() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'userAgentName' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentName() {
      userAgentName = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentFamily' field.
      * @return The value.
      */
    public java.lang.String getUserAgentFamily() {
      return userAgentFamily;
    }


    /**
      * Sets the value of the 'userAgentFamily' field.
      * @param value The value of 'userAgentFamily'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentFamily(java.lang.String value) {
      validate(fields()[18], value);
      this.userAgentFamily = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentFamily' field has been set.
      * @return True if the 'userAgentFamily' field has been set, false otherwise.
      */
    public boolean hasUserAgentFamily() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'userAgentFamily' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentFamily() {
      userAgentFamily = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentVendor' field.
      * @return The value.
      */
    public java.lang.String getUserAgentVendor() {
      return userAgentVendor;
    }


    /**
      * Sets the value of the 'userAgentVendor' field.
      * @param value The value of 'userAgentVendor'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentVendor(java.lang.String value) {
      validate(fields()[19], value);
      this.userAgentVendor = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentVendor' field has been set.
      * @return True if the 'userAgentVendor' field has been set, false otherwise.
      */
    public boolean hasUserAgentVendor() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'userAgentVendor' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentVendor() {
      userAgentVendor = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentType' field.
      * @return The value.
      */
    public java.lang.String getUserAgentType() {
      return userAgentType;
    }


    /**
      * Sets the value of the 'userAgentType' field.
      * @param value The value of 'userAgentType'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentType(java.lang.String value) {
      validate(fields()[20], value);
      this.userAgentType = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentType' field has been set.
      * @return True if the 'userAgentType' field has been set, false otherwise.
      */
    public boolean hasUserAgentType() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'userAgentType' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentType() {
      userAgentType = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentVersion' field.
      * @return The value.
      */
    public java.lang.String getUserAgentVersion() {
      return userAgentVersion;
    }


    /**
      * Sets the value of the 'userAgentVersion' field.
      * @param value The value of 'userAgentVersion'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentVersion(java.lang.String value) {
      validate(fields()[21], value);
      this.userAgentVersion = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentVersion' field has been set.
      * @return True if the 'userAgentVersion' field has been set, false otherwise.
      */
    public boolean hasUserAgentVersion() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'userAgentVersion' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentVersion() {
      userAgentVersion = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentDeviceCategory' field.
      * @return The value.
      */
    public java.lang.String getUserAgentDeviceCategory() {
      return userAgentDeviceCategory;
    }


    /**
      * Sets the value of the 'userAgentDeviceCategory' field.
      * @param value The value of 'userAgentDeviceCategory'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentDeviceCategory(java.lang.String value) {
      validate(fields()[22], value);
      this.userAgentDeviceCategory = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentDeviceCategory' field has been set.
      * @return True if the 'userAgentDeviceCategory' field has been set, false otherwise.
      */
    public boolean hasUserAgentDeviceCategory() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'userAgentDeviceCategory' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentDeviceCategory() {
      userAgentDeviceCategory = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentOsFamily' field.
      * @return The value.
      */
    public java.lang.String getUserAgentOsFamily() {
      return userAgentOsFamily;
    }


    /**
      * Sets the value of the 'userAgentOsFamily' field.
      * @param value The value of 'userAgentOsFamily'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentOsFamily(java.lang.String value) {
      validate(fields()[23], value);
      this.userAgentOsFamily = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentOsFamily' field has been set.
      * @return True if the 'userAgentOsFamily' field has been set, false otherwise.
      */
    public boolean hasUserAgentOsFamily() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'userAgentOsFamily' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentOsFamily() {
      userAgentOsFamily = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentOsVersion' field.
      * @return The value.
      */
    public java.lang.String getUserAgentOsVersion() {
      return userAgentOsVersion;
    }


    /**
      * Sets the value of the 'userAgentOsVersion' field.
      * @param value The value of 'userAgentOsVersion'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentOsVersion(java.lang.String value) {
      validate(fields()[24], value);
      this.userAgentOsVersion = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentOsVersion' field has been set.
      * @return True if the 'userAgentOsVersion' field has been set, false otherwise.
      */
    public boolean hasUserAgentOsVersion() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'userAgentOsVersion' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentOsVersion() {
      userAgentOsVersion = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgentOsVendor' field.
      * @return The value.
      */
    public java.lang.String getUserAgentOsVendor() {
      return userAgentOsVendor;
    }


    /**
      * Sets the value of the 'userAgentOsVendor' field.
      * @param value The value of 'userAgentOsVendor'.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder setUserAgentOsVendor(java.lang.String value) {
      validate(fields()[25], value);
      this.userAgentOsVendor = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgentOsVendor' field has been set.
      * @return True if the 'userAgentOsVendor' field has been set, false otherwise.
      */
    public boolean hasUserAgentOsVendor() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'userAgentOsVendor' field.
      * @return This builder.
      */
    public com.divolte.consumer.dto.DefaultEventRecord.Builder clearUserAgentOsVendor() {
      userAgentOsVendor = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DefaultEventRecord build() {
      try {
        DefaultEventRecord record = new DefaultEventRecord();
        record.detectedDuplicate = fieldSetFlags()[0] ? this.detectedDuplicate : (java.lang.Boolean) defaultValue(fields()[0]);
        record.detectedCorruption = fieldSetFlags()[1] ? this.detectedCorruption : (java.lang.Boolean) defaultValue(fields()[1]);
        record.firstInSession = fieldSetFlags()[2] ? this.firstInSession : (java.lang.Boolean) defaultValue(fields()[2]);
        record.timestamp = fieldSetFlags()[3] ? this.timestamp : (java.lang.Long) defaultValue(fields()[3]);
        record.clientTimestamp = fieldSetFlags()[4] ? this.clientTimestamp : (java.lang.Long) defaultValue(fields()[4]);
        record.remoteHost = fieldSetFlags()[5] ? this.remoteHost : (java.lang.String) defaultValue(fields()[5]);
        record.referer = fieldSetFlags()[6] ? this.referer : (java.lang.String) defaultValue(fields()[6]);
        record.location = fieldSetFlags()[7] ? this.location : (java.lang.String) defaultValue(fields()[7]);
        record.viewportPixelWidth = fieldSetFlags()[8] ? this.viewportPixelWidth : (java.lang.Integer) defaultValue(fields()[8]);
        record.viewportPixelHeight = fieldSetFlags()[9] ? this.viewportPixelHeight : (java.lang.Integer) defaultValue(fields()[9]);
        record.screenPixelWidth = fieldSetFlags()[10] ? this.screenPixelWidth : (java.lang.Integer) defaultValue(fields()[10]);
        record.screenPixelHeight = fieldSetFlags()[11] ? this.screenPixelHeight : (java.lang.Integer) defaultValue(fields()[11]);
        record.partyId = fieldSetFlags()[12] ? this.partyId : (java.lang.String) defaultValue(fields()[12]);
        record.sessionId = fieldSetFlags()[13] ? this.sessionId : (java.lang.String) defaultValue(fields()[13]);
        record.pageViewId = fieldSetFlags()[14] ? this.pageViewId : (java.lang.String) defaultValue(fields()[14]);
        record.eventType = fieldSetFlags()[15] ? this.eventType : (java.lang.String) defaultValue(fields()[15]);
        record.userAgentString = fieldSetFlags()[16] ? this.userAgentString : (java.lang.String) defaultValue(fields()[16]);
        record.userAgentName = fieldSetFlags()[17] ? this.userAgentName : (java.lang.String) defaultValue(fields()[17]);
        record.userAgentFamily = fieldSetFlags()[18] ? this.userAgentFamily : (java.lang.String) defaultValue(fields()[18]);
        record.userAgentVendor = fieldSetFlags()[19] ? this.userAgentVendor : (java.lang.String) defaultValue(fields()[19]);
        record.userAgentType = fieldSetFlags()[20] ? this.userAgentType : (java.lang.String) defaultValue(fields()[20]);
        record.userAgentVersion = fieldSetFlags()[21] ? this.userAgentVersion : (java.lang.String) defaultValue(fields()[21]);
        record.userAgentDeviceCategory = fieldSetFlags()[22] ? this.userAgentDeviceCategory : (java.lang.String) defaultValue(fields()[22]);
        record.userAgentOsFamily = fieldSetFlags()[23] ? this.userAgentOsFamily : (java.lang.String) defaultValue(fields()[23]);
        record.userAgentOsVersion = fieldSetFlags()[24] ? this.userAgentOsVersion : (java.lang.String) defaultValue(fields()[24]);
        record.userAgentOsVendor = fieldSetFlags()[25] ? this.userAgentOsVendor : (java.lang.String) defaultValue(fields()[25]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DefaultEventRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<DefaultEventRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DefaultEventRecord>
    READER$ = (org.apache.avro.io.DatumReader<DefaultEventRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeBoolean(this.detectedDuplicate);

    out.writeBoolean(this.detectedCorruption);

    out.writeBoolean(this.firstInSession);

    out.writeLong(this.timestamp);

    out.writeLong(this.clientTimestamp);

    out.writeString(this.remoteHost);

    if (this.referer == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.referer);
    }

    if (this.location == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.location);
    }

    if (this.viewportPixelWidth == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.viewportPixelWidth);
    }

    if (this.viewportPixelHeight == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.viewportPixelHeight);
    }

    if (this.screenPixelWidth == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.screenPixelWidth);
    }

    if (this.screenPixelHeight == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.screenPixelHeight);
    }

    if (this.partyId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.partyId);
    }

    if (this.sessionId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sessionId);
    }

    if (this.pageViewId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.pageViewId);
    }

    out.writeString(this.eventType);

    if (this.userAgentString == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentString);
    }

    if (this.userAgentName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentName);
    }

    if (this.userAgentFamily == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentFamily);
    }

    if (this.userAgentVendor == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentVendor);
    }

    if (this.userAgentType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentType);
    }

    if (this.userAgentVersion == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentVersion);
    }

    if (this.userAgentDeviceCategory == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentDeviceCategory);
    }

    if (this.userAgentOsFamily == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentOsFamily);
    }

    if (this.userAgentOsVersion == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentOsVersion);
    }

    if (this.userAgentOsVendor == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userAgentOsVendor);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.detectedDuplicate = in.readBoolean();

      this.detectedCorruption = in.readBoolean();

      this.firstInSession = in.readBoolean();

      this.timestamp = in.readLong();

      this.clientTimestamp = in.readLong();

      this.remoteHost = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.referer = null;
      } else {
        this.referer = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.location = null;
      } else {
        this.location = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.viewportPixelWidth = null;
      } else {
        this.viewportPixelWidth = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.viewportPixelHeight = null;
      } else {
        this.viewportPixelHeight = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.screenPixelWidth = null;
      } else {
        this.screenPixelWidth = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.screenPixelHeight = null;
      } else {
        this.screenPixelHeight = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.partyId = null;
      } else {
        this.partyId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sessionId = null;
      } else {
        this.sessionId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.pageViewId = null;
      } else {
        this.pageViewId = in.readString();
      }

      this.eventType = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentString = null;
      } else {
        this.userAgentString = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentName = null;
      } else {
        this.userAgentName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentFamily = null;
      } else {
        this.userAgentFamily = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentVendor = null;
      } else {
        this.userAgentVendor = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentType = null;
      } else {
        this.userAgentType = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentVersion = null;
      } else {
        this.userAgentVersion = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentDeviceCategory = null;
      } else {
        this.userAgentDeviceCategory = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentOsFamily = null;
      } else {
        this.userAgentOsFamily = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentOsVersion = null;
      } else {
        this.userAgentOsVersion = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userAgentOsVendor = null;
      } else {
        this.userAgentOsVendor = in.readString();
      }

    } else {
      for (int i = 0; i < 26; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.detectedDuplicate = in.readBoolean();
          break;

        case 1:
          this.detectedCorruption = in.readBoolean();
          break;

        case 2:
          this.firstInSession = in.readBoolean();
          break;

        case 3:
          this.timestamp = in.readLong();
          break;

        case 4:
          this.clientTimestamp = in.readLong();
          break;

        case 5:
          this.remoteHost = in.readString();
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.referer = null;
          } else {
            this.referer = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.location = null;
          } else {
            this.location = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.viewportPixelWidth = null;
          } else {
            this.viewportPixelWidth = in.readInt();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.viewportPixelHeight = null;
          } else {
            this.viewportPixelHeight = in.readInt();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.screenPixelWidth = null;
          } else {
            this.screenPixelWidth = in.readInt();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.screenPixelHeight = null;
          } else {
            this.screenPixelHeight = in.readInt();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.partyId = null;
          } else {
            this.partyId = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sessionId = null;
          } else {
            this.sessionId = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.pageViewId = null;
          } else {
            this.pageViewId = in.readString();
          }
          break;

        case 15:
          this.eventType = in.readString();
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentString = null;
          } else {
            this.userAgentString = in.readString();
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentName = null;
          } else {
            this.userAgentName = in.readString();
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentFamily = null;
          } else {
            this.userAgentFamily = in.readString();
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentVendor = null;
          } else {
            this.userAgentVendor = in.readString();
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentType = null;
          } else {
            this.userAgentType = in.readString();
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentVersion = null;
          } else {
            this.userAgentVersion = in.readString();
          }
          break;

        case 22:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentDeviceCategory = null;
          } else {
            this.userAgentDeviceCategory = in.readString();
          }
          break;

        case 23:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentOsFamily = null;
          } else {
            this.userAgentOsFamily = in.readString();
          }
          break;

        case 24:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentOsVersion = null;
          } else {
            this.userAgentOsVersion = in.readString();
          }
          break;

        case 25:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userAgentOsVendor = null;
          } else {
            this.userAgentOsVendor = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










